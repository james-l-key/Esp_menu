#include "menu_data.h"
#include "lvgl.h"
#include "esp_lvgl_port.h"
#include "iot_knob.h"
#include "iot_button.h"
#include "string.h"

#include "user_graphic.h"

{% for code in graphics_code %}
{{ code }}
{% endfor %}

static void event_handler(lv_event_t *e) {
    lv_obj_t *obj = lv_event_get_target(e);
    lv_event_code_t code = lv_event_get_code(e);
    if (code == LV_EVENT_CLICKED) {
        const char *text = lv_list_get_btn_text(obj);
        {% for screen in config.menu.screens %}
        {% for widget in screen.widgets %}
        /* DEBUG: Widget type={{ widget.type }}, items={{ widget['items'] }} */
        {% if widget.type == 'list' and widget['items'] %}
        /* DEBUG: Processing list widget with {{ widget['items'] | length }} items */
        {% for item in widget['items'] %}
        /* DEBUG: Adding item {{ item.text }} */
        if (strcmp(text, "{{ item.text }}") == 0) {
            {% if item.action %}
            {{ item.action }}();
            {% elif item.screen %}
            lv_scr_load(scr_{{ item.screen }});
            {% endif %}
        }
        {% endfor %}
        {% else %}
        /* DEBUG: Skipped widget type={{ widget.type }}, items={{ widget['items'] }} */
        {% endif %}
        {% endfor %}
        {% endfor %}
    }
}

void menu_init(void) {
    // Display setup
    lvgl_port_cfg_t lvgl_cfg = {
        .disp_cfg = {
            .type = LVGL_PORT_DISP_TYPE_I2C,
            .width = {{ config.display.width }},
            .height = {{ config.display.height }},
            .i2c = {
                .sda = {{ config.display.sda_pin }},
                .scl = {{ config.display.scl_pin }},
                .addr = {{ config.display.i2c_address }}
            }
        }
    };
    lvgl_port_init(&lvgl_cfg);
    lv_disp_t *disp = lvgl_port_add_disp(&lvgl_cfg.disp_cfg);

    // Encoder setup
    {% for encoder in config.encoders %}
    knob_handle_t {{ encoder.name }} = knob_create({{ encoder.pins.A }}, {{ encoder.pins.B }});
    button_handle_t {{ encoder.name }}_btn = button_create({{ encoder.pins.switch }});
    lv_indev_t *indev_{{ encoder.name }} = lvgl_port_add_indev({{ encoder.name }}, {{ encoder.name }}_btn);
    lv_group_t *group_{{ encoder.name }} = lv_group_create();
    {% endfor %}

    // Menu setup
    {% for screen in config.menu.screens %}
    lv_obj_t *scr_{{ screen.name }} = lv_obj_create(NULL);
    {% for widget in screen.widgets %}
    /* DEBUG: Widget type={{ widget.type }}, items={{ widget['items'] }} */
    {% if widget.type == 'list' and widget['items'] %}
    /* DEBUG: Processing list widget with {{ widget['items'] | length }} items */
    lv_obj_t *list_{{ screen.name }}_{{ loop.index }} = lv_list_create(scr_{{ screen.name }});
    {% for item in widget['items'] %}
    /* DEBUG: Adding item {{ item.text }} */
    lv_list_add_btn(list_{{ screen.name }}_{{ loop.index }}, NULL, "{{ item.text }}");
    {% endfor %}
    lv_obj_add_event_cb(list_{{ screen.name }}_{{ loop.index }}, event_handler, LV_EVENT_CLICKED, NULL);
    lv_group_add_obj(group_{{ widget.controlled_by }}, list_{{ screen.name }}_{{ loop.index }});
    lv_indev_set_group(indev_{{ widget.controlled_by }}, group_{{ widget.controlled_by }});
    {% elif widget.type == 'image' %}
    lv_obj_t *img_{{ screen.name }}_{{ loop.index }} = lv_image_create(scr_{{ screen.name }});
    lv_image_set_src(img_{{ screen.name }}_{{ loop.index }}, &{{ widget.graphic_id }}_dsc);
    lv_obj_set_pos(img_{{ screen.name }}_{{ loop.index }}, {{ widget.x }}, {{ widget.y }});
    {% elif widget.type == 'canvas' %}
    {% set graphic = config.graphics | selectattr('id', 'equalto', widget.graphic_id) | first %}
    lv_obj_t *canvas_{{ screen.name }}_{{ loop.index }} = lv_canvas_create(scr_{{ screen.name }});
    draw_{{ widget.graphic_id }}(canvas_{{ screen.name }}_{{ loop.index }}, {{ widget.width }}, {{ widget.height }}, {{ graphic.params.tile_size if graphic.params is defined and graphic.params.tile_size is defined else 0 }});
    lv_obj_set_pos(canvas_{{ screen.name }}_{{ loop.index }}, {{ widget.x }}, {{ widget.y }});
    {% else %}
    /* DEBUG: Unknown widget type={{ widget.type }} */
    {% endif %}
    {% endfor %}
    {% endfor %}

    // Load initial screen
    lv_scr_load(scr_main);
}