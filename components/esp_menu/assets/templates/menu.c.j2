#include "menu_data.h"
#include "lvgl.h"
#include "esp_lvgl_port.h"
#include "iot_knob.h"
#include "iot_button.h"
#include "button_types.h"
#include "button_gpio.h"
#include "string.h"
#include "user_graphic.h"

{% for code in graphics_code %}
{{ code }}
{% endfor %}

// Global screen declarations
static lv_obj_t *scr_main;
{% for screen in config.menu.screens %}
{% for item in screen['items'] %}
{% if item.type == 'submenu' %}
static lv_obj_t *scr_{{ item.name | replace(" ", "_") | replace("/", "_") | lower }};
{% endif %}
{% endfor %}
{% endfor %}

static void event_handler(lv_event_t *e) {
    lv_obj_t *obj = lv_event_get_target(e);
    lv_event_code_t code = lv_event_get_code(e);
    if (code == LV_EVENT_CLICKED) {
        const char *text = lv_list_get_btn_text(lv_obj_get_parent(obj), obj);
        {% for screen in config.menu.screens %}
        {% for item in screen['items'] %}
        if (strcmp(text, "{{ item.name }}") == 0) {
            {% if item.type == 'action' and item.callback %}
            {{ item.callback }}();
            {% elif item.type == 'submenu' %}
            lv_scr_load(scr_{{ item.name | replace(" ", "_") | replace("/", "_") | lower }});
            {% endif %}
        }
        {% endfor %}
        {% endfor %}
    }
}

void menu_init(void) {
    // Note: LVGL and encoders are initialized by esp_menu_init()
    // This function only sets up the menu structure
    
    // Create and register screens
    scr_main = lv_obj_create(NULL);
    user_graphic_init(scr_main);
    {% for screen in config.menu.screens %}
    {% for item in screen['items'] %}
    {% if item.type == 'submenu' %}
    scr_{{ item.name | replace(" ", "_") | replace("/", "_") | lower }} = lv_obj_create(NULL);
    user_graphic_init(scr_{{ item.name | replace(" ", "_") | replace("/", "_") | lower }});
    {% endif %}
    {% endfor %}
    {% endfor %}

    // Menu setup
    {% for screen in config.menu.screens %}
    {% set screen_loop = loop %}
    {% set screen_name = "main" if screen.name == "main" else screen.name | replace(" ", "_") | replace("/", "_") | lower %}
    lv_obj_t *list_{{ screen_name }} = lv_list_create(scr_{{ screen_name }});
    {% if screen_name == "main" %}
    lv_obj_set_size(list_main, 128, 64);
    lv_obj_align(list_main, LV_ALIGN_TOP_LEFT, 0, 0);
    // Enable vertical scrolling for the list and set max height
    lv_obj_set_scroll_dir(list_main, LV_DIR_VER);
    lv_obj_set_scroll_snap_y(list_main, LV_SCROLL_SNAP_CENTER);
    lv_obj_set_style_max_height(list_main, 64, 0);
    set_main_menu_list(list_main);
    // --- Encoder and group setup ---
    // Create a group for the encoder and assign it
    lv_group_t *group_encoder = lv_group_create();
    // Add the menu list to the group
    lv_group_add_obj(group_encoder, list_main);
    // Set focus to the menu list
    lv_group_focus_obj(list_main);
    // Find the encoder input device (assumes only one encoder)
    lv_indev_t *indev = lv_indev_get_next(NULL);
    while (indev) {
        if (lv_indev_get_type(indev) == LV_INDEV_TYPE_ENCODER) {
            lv_indev_set_group(indev, group_encoder);
            break;
        }
        indev = lv_indev_get_next(indev);
    }

    // --- Style for focused menu item (SSD1306 highlight) ---
    static lv_style_t style_focus;
    lv_style_init(&style_focus);
    lv_style_set_bg_opa(&style_focus, LV_OPA_COVER);
    lv_style_set_bg_color(&style_focus, lv_color_white());
    lv_style_set_text_color(&style_focus, lv_color_black());
    lv_style_set_border_width(&style_focus, 1);
    lv_style_set_border_color(&style_focus, lv_color_black());
    lv_obj_add_style(list_main, &style_focus, LV_PART_ITEMS | LV_STATE_FOCUSED);
    {% endif %}
    {% for item in screen['items'] %}
    {% set item_index = screen_loop.index0 * 100 + loop.index %}
    {% if item.graphic_id %}
    lv_obj_t *img_{{ item_index }} = lv_img_create(list_{{ screen_name }});
    lv_img_set_src(img_{{ item_index }}, &{{ item.graphic_id }}_dsc);
    lv_obj_align(img_{{ item_index }}, LV_ALIGN_LEFT_MID, 0, 0);
    lv_obj_t *btn_{{ item_index }} = lv_list_add_btn(list_{{ screen_name }}, NULL, "{{ item.name }}");
    lv_obj_align_to(btn_{{ item_index }}, img_{{ item_index }}, LV_ALIGN_OUT_RIGHT_MID, 5, 0);
    lv_obj_add_event_cb(btn_{{ item_index }}, event_handler, LV_EVENT_CLICKED, NULL);
    {% else %}
    lv_obj_t *btn_{{ item_index }} = lv_list_add_btn(list_{{ screen_name }}, NULL, "{{ item.name }}");
    lv_obj_add_event_cb(btn_{{ item_index }}, event_handler, LV_EVENT_CLICKED, NULL);
    {% endif %}
    {% if loop.first and screen_name == "main" %}
    // Do not force focus to first button; let group/encoder handle focus navigation
    // lv_group_focus_obj(btn_{{ item_index }});
    {% endif %}
    {% endfor %}
    
    {% for item in screen['items'] %}
    {% if item.type == 'submenu' %}
    lv_obj_t *list_{{ item.name | replace(" ", "_") | replace("/", "_") | lower }} = lv_list_create(scr_{{ item.name | replace(" ", "_") | replace("/", "_") | lower }});
    {% for subitem in item['items'] %}
    {% set subitem_index = screen.name | replace(" ", "_") | replace("/", "_") | lower ~ "_" ~ item.name | replace(" ", "_") | replace("/", "_") | lower ~ "_" ~ loop.index %}
    {% if subitem.graphic_id %}
    lv_obj_t *subimg_{{ subitem_index }} = lv_img_create(list_{{ item.name | replace(" ", "_") | replace("/", "_") | lower }});
    lv_img_set_src(subimg_{{ subitem_index }}, &{{ subitem.graphic_id }}_dsc);
    lv_obj_align(subimg_{{ subitem_index }}, LV_ALIGN_LEFT_MID, 0, 0);
    lv_obj_t *subbtn_{{ subitem_index }} = lv_list_add_btn(list_{{ item.name | replace(" ", "_") | replace("/", "_") | lower }}, NULL, "{{ subitem.name }}");
    lv_obj_align_to(subbtn_{{ subitem_index }}, subimg_{{ subitem_index }}, LV_ALIGN_OUT_RIGHT_MID, 5, 0);
    lv_obj_add_event_cb(subbtn_{{ subitem_index }}, event_handler, LV_EVENT_CLICKED, NULL);
    {% else %}
    lv_obj_t *subbtn_{{ subitem_index }} = lv_list_add_btn(list_{{ item.name | replace(" ", "_") | replace("/", "_") | lower }}, NULL, "{{ subitem.name }}");
    lv_obj_add_event_cb(subbtn_{{ subitem_index }}, event_handler, LV_EVENT_CLICKED, NULL);
    {% endif %}
    {% endfor %}
    {% endif %}
    {% endfor %}
    {% endfor %}

    // Update layout after populating the list
    lv_obj_update_layout(list_main);
    // Load initial screen
    lv_scr_load(scr_main);
}